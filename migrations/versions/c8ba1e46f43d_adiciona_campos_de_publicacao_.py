"""Adiciona campos de publicacao/cancelamento a Event e novas permissoes a Role/User

Revision ID: c8ba1e46f43d
Revises: 9047c53290de
Create Date: 2025-09-26 13:37:13.204192

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c8ba1e46f43d'
down_revision = '9047c53290de'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # ===============================================
    # Alterações para o modelo 'role'
    # ===============================================
    with op.batch_alter_table('role', schema=None) as batch_op:
        # 1. Adicionar colunas temporariamente como nullable=True
        batch_op.add_column(sa.Column('can_publish_event', sa.Boolean(), nullable=True, server_default=sa.text('false')))
        batch_op.add_column(sa.Column('can_cancel_event', sa.Boolean(), nullable=True, server_default=sa.text('false')))
        batch_op.add_column(sa.Column('can_duplicate_event', sa.Boolean(), nullable=True, server_default=sa.text('false')))
        batch_op.add_column(sa.Column('can_view_event_registrations', sa.Boolean(), nullable=True, server_default=sa.text('false')))
        batch_op.add_column(sa.Column('can_view_event_reports', sa.Boolean(), nullable=True, server_default=sa.text('false')))

    # 2. Para SQLite, o server_default no add_column pode não preencher linhas existentes.
    #    Atualizamos explicitamente para garantir que todas as colunas tenham um valor.
    #    (Para PostgreSQL, geralmente o server_default já faria isso)
    op.execute(sa.text("UPDATE role SET can_publish_event = FALSE WHERE can_publish_event IS NULL"))
    op.execute(sa.text("UPDATE role SET can_cancel_event = FALSE WHERE can_cancel_event IS NULL"))
    op.execute(sa.text("UPDATE role SET can_duplicate_event = FALSE WHERE can_duplicate_event IS NULL"))
    op.execute(sa.text("UPDATE role SET can_view_event_registrations = FALSE WHERE can_view_event_registrations IS NULL"))
    op.execute(sa.text("UPDATE role SET can_view_event_reports = FALSE WHERE can_view_event_reports IS NULL"))


    with op.batch_alter_table('role', schema=None) as batch_op:
        # 3. Alterar colunas para nullable=False
        batch_op.alter_column('can_publish_event', existing_type=sa.Boolean(), nullable=False, existing_server_default=sa.text('false'))
        batch_op.alter_column('can_cancel_event', existing_type=sa.Boolean(), nullable=False, existing_server_default=sa.text('false'))
        batch_op.alter_column('can_duplicate_event', existing_type=sa.Boolean(), nullable=False, existing_server_default=sa.text('false'))
        batch_op.alter_column('can_view_event_registrations', existing_type=sa.Boolean(), nullable=False, existing_server_default=sa.text('false'))
        batch_op.alter_column('can_view_event_reports', existing_type=sa.Boolean(), nullable=False, existing_server_default=sa.text('false'))


    # ===============================================
    # Alterações para o modelo 'event'
    # ===============================================
    with op.batch_alter_table('event', schema=None) as batch_op:
        # 1. Adicionar colunas temporariamente como nullable=True
        batch_op.add_column(sa.Column('is_published', sa.Boolean(), nullable=True, server_default=sa.text('false')))
        batch_op.add_column(sa.Column('is_cancelled', sa.Boolean(), nullable=True, server_default=sa.text('false')))

    # 2. Para SQLite, atualizar explicitamente para garantir que todas as colunas tenham um valor.
    op.execute(sa.text("UPDATE event SET is_published = FALSE WHERE is_published IS NULL"))
    op.execute(sa.text("UPDATE event SET is_cancelled = FALSE WHERE is_cancelled IS NULL"))

    with op.batch_alter_table('event', schema=None) as batch_op:
        # 3. Alterar colunas para nullable=False
        batch_op.alter_column('is_published', existing_type=sa.Boolean(), nullable=False, existing_server_default=sa.text('false'))
        batch_op.alter_column('is_cancelled', existing_type=sa.Boolean(), nullable=False, existing_server_default=sa.text('false'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_column('can_view_event_reports')
        batch_op.drop_column('can_view_event_registrations')
        batch_op.drop_column('can_duplicate_event')
        batch_op.drop_column('can_cancel_event')
        batch_op.drop_column('can_publish_event')

    with op.batch_alter_table('event', schema=None) as batch_op:
        batch_op.drop_column('is_cancelled')
        batch_op.drop_column('is_published')

    # ### end Alembic commands ###
